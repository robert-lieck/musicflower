
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_triangular_maps.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_triangular_maps.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_triangular_maps.py:


Triangular Maps
===============

.. GENERATED FROM PYTHON SOURCE LINES 7-10

The array returned by :func:`~musicflower.loader.load_file` contains the triangular map of pitch-class distributions.
To use NumPy's efficient linear storage, it is flattened by starting at the top and then going row by row, thus, it
contains a total number of :math:`n(n+1)/2` pitch-class distributions.

.. GENERATED FROM PYTHON SOURCE LINES 10-16

.. code-block:: Python

    from musicflower.loader import load_file
    resolution = 10
    scape = load_file(data='Prelude_No._1_BWV_846_in_C_Major.mxl', n=resolution)
    print(scape.shape)
    print(resolution * (resolution + 1) / 2)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    (55, 12)
    55.0




.. GENERATED FROM PYTHON SOURCE LINES 17-22

To handle this kind of flattened triangular maps, the :class:`~triangularmap.tmap.TMap` class from the
`TriangularMap <https://github.com/robert-lieck/triangularmap>`_ package can be used. It takes
a linear storage and allows for efficiently accessing its content as if it was a triangular map (see the
`TriangularMap documentation <https://robert-lieck.github.io/triangularmap/>`_ for more details).
For multidimensional arrays, the first dimension is assumed to represent the triangular map.

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: Python


    from triangularmap import TMap
    import numpy as np
    tmap = TMap(np.arange(6))
    print(tmap.pretty())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

         ╱╲     
        ╱ 0╲    
       ╱╲  ╱╲   
      ╱ 1╲╱ 2╲  
     ╱╲  ╱╲  ╱╲ 
    ╱ 3╲╱ 4╲╱ 5╲




.. GENERATED FROM PYTHON SOURCE LINES 29-30

The functionalities include slicing at a specific level/depth (this returns *views* of the underlying storage)

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: Python

    print(tmap.dslice[0])  # depth starts a 0 from the top
    print(tmap.lslice[1])  # levels start at 1 from the bottom





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [0]
    [3 4 5]




.. GENERATED FROM PYTHON SOURCE LINES 34-38

and slicing "skewed columns" for a specific start/end index (this returns *copies* of the underlying storage, note the
different syntax using square brackets), which always run left-to-right (i.e. bottom-up for start-slices, top-down for
end-slices)


.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    print(tmap.sslice[0])  # start indices run from 0 to n - 1
    print(tmap.eslice[3])  # end indices run from 1 to n




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [3 1 0]
    [0 2 5]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.353 seconds)


.. _sphx_glr_download_auto_examples_plot_triangular_maps.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_triangular_maps.ipynb <plot_triangular_maps.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_triangular_maps.py <plot_triangular_maps.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_triangular_maps.zip <plot_triangular_maps.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
